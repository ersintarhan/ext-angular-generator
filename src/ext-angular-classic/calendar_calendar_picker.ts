import {Component,ViewChild,ElementRef,ComponentFactoryResolver,ViewContainerRef,forwardRef,ContentChildren,QueryList} from '@angular/core';
import { base } from './base';
// Ext Class - Ext.calendar.form.CalendarPicker
export class calendar_calendar_pickerMetaData {
	public static XTYPE: string = 'calendar-calendar-picker';
	public static INPUTNAMES: string[] = [
		'activeCounter',
		'activeError',
		'activeErrorsTpl',
		'afterBodyEl',
		'afterLabelTextTpl',
		'afterLabelTpl',
		'afterSubTpl',
		'alignOnScroll',
		'alignTarget',
		'allowBlank',
		'allowOnlyWhitespace',
		'allQuery',
		'alwaysOnTop',
		'anchor',
		'animateShadow',
		'anyMatch',
		'ariaAttributes',
		'ariaDescribedBy',
		'ariaErrorText',
		'ariaHelp',
		'ariaLabel',
		'ariaLabelledBy',
		'autoEl',
		'autoFitErrors',
		'autoHideInputMask',
		'autoLoadOnValue',
		'autoRender',
		'autoScroll',
		'autoSelect',
		'autoSelectLast',
		'autoShow',
		'baseBodyCls',
		'baseCls',
		'beforeBodyEl',
		'beforeLabelTextTpl',
		'beforeLabelTpl',
		'beforeSubTpl',
		'bind',
		'blankText',
		'border',
		'caseSensitive',
		'checkChangeBuffer',
		'checkChangeEvents',
		'childEls',
		'clearFilterOnBlur',
		'cls',
		'collapseOnSelect',
		'columnWidth',
		'componentCls',
		'componentLayout',
		'constrain',
		'constraintInsets',
		'constrainTo',
		'contentEl',
		'controller',
		'data',
		'defaultAlign',
		'defaultListConfig',
		'defaultListenerScope',
		'delimiter',
		'dirtyCls',
		'disabled',
		'disabledCls',
		'disableKeyFilter',
		'displayField',
		'displayTpl',
		'dock',
		'draggable',
		'editable',
		'emptyCls',
		'emptyText',
		'enableKeyEvents',
		'enableRegEx',
		'enforceMaxLength',
		'errorMsgCls',
		'fieldBodyCls',
		'fieldCls',
		'fieldLabel',
		'fieldStyle',
		'fieldSubTpl',
		'filters',
		'fixed',
		'flex',
		'floating',
		'focusCls',
		'focusOnToFront',
		'forceSelection',
		'formatText',
		'formBind',
		'formItemCls',
		'frame',
		'grow',
		'growAppend',
		'growMax',
		'growMin',
		'growToLongestValue',
		'height',
		'hidden',
		'hiddenDataCls',
		'hiddenName',
		'hideEmptyLabel',
		'hideLabel',
		'hideMode',
		'hideTrigger',
		'html',
		'id',
		'inputAttrTpl',
		'inputId',
		'inputMask',
		'inputType',
		'inputWrapCls',
		'invalidCls',
		'invalidText',
		'isTextInput',
		'itemId',
		'keyMap',
		'keyMapEnabled',
		'keyMapTarget',
		'labelableRenderTpl',
		'labelAlign',
		'labelAttrTpl',
		'labelCls',
		'labelClsExtra',
		'labelPad',
		'labelSeparator',
		'labelStyle',
		'labelWidth',
		'liquidLayout',
		'listConfig',
		'listeners',
		'liveDrag',
		'loader',
		'margin',
		'maskDefaults',
		'maskElement',
		'maskRe',
		'matchFieldWidth',
		'maxHeight',
		'maxLength',
		'maxLengthText',
		'maxWidth',
		'minChars',
		'minHeight',
		'minLength',
		'minLengthText',
		'minWidth',
		'modal',
		'modelValidation',
		'msgTarget',
		'multiSelect',
		'name',
		'nameable',
		'openCls',
		'overCls',
		'overflowX',
		'overflowY',
		'padding',
		'pageSize',
		'pickerAlign',
		'pickerOffset',
		'pinList',
		'plugins',
		'preventMark',
		'publishes',
		'queryCaching',
		'queryDelay',
		'queryMode',
		'queryParam',
		'readOnly',
		'readOnlyCls',
		'reference',
		'regex',
		'regexText',
		'region',
		'renderConfig',
		'renderData',
		'renderSelectors',
		'renderTo',
		'renderTpl',
		'repeatTriggerClick',
		'requiredCls',
		'resizable',
		'resizeHandles',
		'saveDelay',
		'scrollable',
		'selection',
		'selectOnFocus',
		'selectOnTab',
		'session',
		'shadow',
		'shadowOffset',
		'shareableName',
		'shim',
		'shrinkWrap',
		'size',
		'stateEvents',
		'stateful',
		'stateId',
		'store',
		'stripCharsRe',
		'style',
		'submitValue',
		'tabIndex',
		'toFrontOnShow',
		'touchAction',
		'tpl',
		'tplWriteMode',
		'transform',
		'transformInPlace',
		'triggerAction',
		'triggerCls',
		'triggers',
		'triggerWrapCls',
		'twoWayBindable',
		'typeAhead',
		'typeAheadDelay',
		'ui',
		'uiCls',
		'userCls',
		'validateBlank',
		'validateOnBlur',
		'validateOnChange',
		'validation',
		'validationField',
		'validator',
		'value',
		'valueField',
		'valueNotFoundText',
		'valuePublishEvent',
		'viewModel',
		'vtype',
		'vtypeText',
		'weight',
		'width',
		'xtype',
		'flex',
		'platformConfig',
		'responsiveConfig',
		'fitToParent',
		'config'
];
	public static OUTPUTS: any[] = [
		{name:'activate',parameters:'calendar-calendar-picker'},
		{name:'added',parameters:'calendar-calendar-picker,container,pos'},
		{name:'afterlayoutanimation',parameters:'calendar-calendar-picker'},
		{name:'afterrender',parameters:'calendar-calendar-picker'},
		{name:'autosize',parameters:'calendar-calendar-picker,width'},
		{name:'beforeactivate',parameters:'calendar-calendar-picker'},
		{name:'beforedeactivate',parameters:'calendar-calendar-picker'},
		{name:'beforedeselect',parameters:'combo,record,index'},
		{name:'beforedestroy',parameters:'calendar-calendar-picker'},
		{name:'beforehide',parameters:'calendar-calendar-picker'},
		{name:'beforequery',parameters:'queryPlan'},
		{name:'beforerender',parameters:'calendar-calendar-picker'},
		{name:'beforeselect',parameters:'combo,record,index'},
		{name:'beforeshow',parameters:'calendar-calendar-picker'},
		{name:'beforestaterestore',parameters:'calendar-calendar-picker,state'},
		{name:'beforestatesave',parameters:'calendar-calendar-picker,state'},
		{name:'blur',parameters:'calendar-calendar-picker,event'},
		{name:'boxready',parameters:'calendar-calendar-picker,width,height'},
		{name:'change',parameters:'calendar-calendar-picker,newValue,oldValue'},
		{name:'collapse',parameters:'field'},
		{name:'deactivate',parameters:'calendar-calendar-picker'},
		{name:'destroy',parameters:'calendar-calendar-picker'},
		{name:'dirtychange',parameters:'calendar-calendar-picker,isDirty'},
		{name:'disable',parameters:'calendar-calendar-picker'},
		{name:'enable',parameters:'calendar-calendar-picker'},
		{name:'errorchange',parameters:'calendar-calendar-picker,error'},
		{name:'expand',parameters:'field'},
		{name:'focus',parameters:'calendar-calendar-picker,event'},
		{name:'focusenter',parameters:'calendar-calendar-picker,event'},
		{name:'focusleave',parameters:'calendar-calendar-picker,event'},
		{name:'hide',parameters:'calendar-calendar-picker'},
		{name:'keydown',parameters:'calendar-calendar-picker,e'},
		{name:'keypress',parameters:'calendar-calendar-picker,e'},
		{name:'keyup',parameters:'calendar-calendar-picker,e'},
		{name:'move',parameters:'calendar-calendar-picker,x,y'},
		{name:'removed',parameters:'calendar-calendar-picker,ownerCt'},
		{name:'render',parameters:'calendar-calendar-picker'},
		{name:'resize',parameters:'calendar-calendar-picker,width,height,oldWidth,oldHeight'},
		{name:'select',parameters:'combo,record'},
		{name:'show',parameters:'calendar-calendar-picker'},
		{name:'specialkey',parameters:'calendar-calendar-picker,e'},
		{name:'staterestore',parameters:'calendar-calendar-picker,state'},
		{name:'statesave',parameters:'calendar-calendar-picker,state'},
		{name:'validitychange',parameters:'calendar-calendar-picker,isValid'},
		{name:'writeablechange',parameters:'calendar-calendar-picker,Read'},
		{name:'ready',parameters:''}
];
	public static OUTPUTNAMES: string[] = [
		'activate',
		'added',
		'afterlayoutanimation',
		'afterrender',
		'autosize',
		'beforeactivate',
		'beforedeactivate',
		'beforedeselect',
		'beforedestroy',
		'beforehide',
		'beforequery',
		'beforerender',
		'beforeselect',
		'beforeshow',
		'beforestaterestore',
		'beforestatesave',
		'blur',
		'boxready',
		'change',
		'collapse',
		'deactivate',
		'destroy',
		'dirtychange',
		'disable',
		'enable',
		'errorchange',
		'expand',
		'focus',
		'focusenter',
		'focusleave',
		'hide',
		'keydown',
		'keypress',
		'keyup',
		'move',
		'removed',
		'render',
		'resize',
		'select',
		'show',
		'specialkey',
		'staterestore',
		'statesave',
		'validitychange',
		'writeablechange',
		'ready'
];
}
@Component({
  selector: calendar_calendar_pickerMetaData.XTYPE,
	inputs: calendar_calendar_pickerMetaData.INPUTNAMES,
	outputs: calendar_calendar_pickerMetaData.OUTPUTNAMES,
	providers: [{provide: base, useExisting: forwardRef(() => calendar_calendar_picker)}],
	template: '<ng-template #dynamic></ng-template>'
})
export class calendar_calendar_picker extends base {
	constructor(eRef:ElementRef,resolver:ComponentFactoryResolver,vcRef:ViewContainerRef) {
		super(eRef,resolver,vcRef,calendar_calendar_pickerMetaData);
	}
	//@ContentChildren(base,{read:ViewContainerRef}) extbaseRef:QueryList<ViewContainerRef>;
	@ContentChildren(base,{read: base}) extbaseRef: QueryList<base>;
	@ViewChild('dynamic',{read:ViewContainerRef}) dynamicRef:ViewContainerRef;
	ngAfterContentInit() {this.AfterContentInit(this.extbaseRef);}
	ngOnInit() {this.OnInit(this.dynamicRef,calendar_calendar_pickerMetaData);}
}
